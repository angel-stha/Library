{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\LibraryFront-master\\\\src\\\\Librarian\\\\StudentProfile.js\";\nimport React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios';\nimport { regExpLiteral } from '@babel/types';\n\nclass Profile extends Component {\n  constructor(props) {\n    super();\n\n    this.onSubmitHandler = event => {\n      {\n        console.log(this.state.Rollno);\n        axios.get('http://localhost:8081/gettingissuedata', {\n          params: {\n            rollno: this.state.Rollno\n          }\n        }).then(res => {\n          this.setState({\n            RollQuery: res.data\n          });\n          console.log(res.data);\n        });\n      }\n    };\n\n    this.onConfirmHandler = (title, barcode) => {\n      console.log(\"Title and barcode is\", title, barcode);\n      var data = {\n        Barcode: this.state.Barcode,\n        Rollno: this.state.Rollno,\n        Title: title\n      };\n      axios.post('http://localhost:8081/confirmreserve', data).then(res => {\n        console.log(res.data);\n      }).catch(error => {\n        console.log(\"Error\");\n      });\n    };\n\n    this.state = {\n      Rollno: \"\",\n      RollQuery: [],\n      Barcode: \"\",\n      Title: \"\",\n      Return: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Student Profile\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputSize: \"inputSmall\",\n      type: \"text\",\n      placeholder: \"Rollno\",\n      value: this.state.Rollno,\n      changed: e => this.setState({\n        Rollno: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.RollQuery.map((item, index) => {\n      console.log(item);\n\n      if (item.Confirm) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"SN:\", item.SN, \" \\xA0\\xA0 Roll:\", item.Rollno, \"\\xA0\\xA0 Title:\", item.Title, \"  \\xA0\\xA0 Barcode:\", item.Barcode, \"\\xA0\\xA0\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"SN:\", item.SN, \" \\xA0\\xA0 Roll:\", item.Rollno, \"\\xA0\\xA0 Title:\", item.Title, \"  \\xA0\\xA0 On Reserved \\xA0\\xA0\"));\n      }\n    }))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:\\Users\\User\\LibraryFront-master\\src\\Librarian\\StudentProfile.js"],"names":["React","Component","Input","axios","regExpLiteral","Profile","constructor","props","onSubmitHandler","event","console","log","state","Rollno","get","params","rollno","then","res","setState","RollQuery","data","onConfirmHandler","title","barcode","Barcode","Title","post","catch","error","Return","render","e","target","value","map","item","index","Confirm","SN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios';\n\nimport { regExpLiteral } from '@babel/types';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            Rollno: \"\",\n            RollQuery : [],\n            Barcode:\"\",\n            Title:\"\",\n            Return:\"\"\n        };\n    }\nonSubmitHandler = (event) => {\n  {\n    console.log(this.state.Rollno);\n   axios.get('http://localhost:8081/gettingissuedata', {\n            params: {\n              rollno: this.state.Rollno\n            }}\n        )\n         .then(res => {\n            this.setState({RollQuery: res.data})\n            console.log(res.data);\n        })\n}\n}\nonConfirmHandler=(title, barcode)=>{\nconsole.log(\"Title and barcode is\", title, barcode);\nvar data={\n    Barcode:this.state.Barcode,\n    Rollno:this.state.Rollno,\n    Title:title\n}\n\n  axios.post('http://localhost:8081/confirmreserve',data)\n  .then(res => {\n          console.log(res.data);\n      })\n      .catch((error) => {\n          console.log(\"Error\");\n      });\n}\n\nrender() {\nreturn (\n\n    <div className=\"App\">\n        <h1 className=\"Header\">Student Profile</h1>\n        \n        <div>\n            <Input\n                inputSize=\"inputSmall\"\n                type=\"text\"\n                placeholder='Rollno'\n                value={this.state.Rollno}\n                changed={e => this.setState({ Rollno: e.target.value })}\n            />\n             <button onClick={this.onSubmitHandler}>Submit</button>\n             <br/>\n             <br/>\n             <br/>\n        </div>\n        \n       <div>\n       <div>  \n         \n         {this.state.RollQuery.map((item,index)=>{\n             console.log(item);\n             if (item.Confirm){\n                return(\n                    <div>\n                    <div>SN:{item.SN} &nbsp;&nbsp;\n                    Roll:{item.Rollno}&nbsp;&nbsp;\n                    Title:{item.Title}  &nbsp;&nbsp;\n                    Barcode:{item.Barcode}\n                    &nbsp;&nbsp;\n                    </div>\n                    </div>\n                )\n            }\n            else {\n                return(\n                    <div>\n                    <div>SN:{item.SN} &nbsp;&nbsp;\n                    Roll:{item.Rollno}&nbsp;&nbsp;\n                    Title:{item.Title}  &nbsp;&nbsp;\n                     On Reserved\n                    &nbsp;&nbsp;\n                    </div>\n                  </div>\n                )\n            }\n         })}\n        </div> \n       </div>\n    </div>\n\n)\n}\n}\nexport default Profile;"]},"metadata":{},"sourceType":"module"}