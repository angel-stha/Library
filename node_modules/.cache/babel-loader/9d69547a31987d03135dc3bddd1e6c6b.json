{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\LibraryFront-master\\\\src\\\\Librarian\\\\Return.js\";\nimport React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios';\nimport { regExpLiteral } from '@babel/types';\n\nclass Return extends Component {\n  constructor(props) {\n    super();\n\n    this.onSubmitHandler = event => {\n      {\n        console.log(this.state.Rollno);\n        axios.get('http://localhost:8081/gettingissuedata', {\n          params: {\n            rollno: this.state.Rollno\n          }\n        }).then(res => {\n          this.setState({\n            RollQuery: res.data\n          });\n          console.log(res.data);\n        });\n      }\n    };\n\n    this.onReturnHandler = (title, barcode) => {\n      console.log(\"Title and barcode is\", title, barcode);\n      var data = {\n        Barcode: barcode,\n        Rollno: this.state.Rollno,\n        Title: title\n      };\n      axios.post('http://localhost:8081/returnbook', data).then(res => {\n        console.log(res.data);\n\n        if (res.data == 'Book Returned') {\n          alert(title + 'Book returned');\n          window.location.reload();\n        }\n      }).catch(error => {\n        console.log(\"Error\");\n      });\n    };\n\n    this.state = {\n      Rollno: \"\",\n      RollQuery: [],\n      Barcode: \"\",\n      Title: \"\",\n      Return: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Return Book\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputSize: \"inputSmall\",\n      type: \"text\",\n      placeholder: \"Rollno\",\n      value: this.state.Rollno,\n      changed: e => this.setState({\n        Rollno: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.RollQuery.map((item, index) => {\n      console.log(item);\n\n      if (item.Confirm) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"SN:\", item.SN, \" \\xA0\\xA0 Roll:\", item.Rollno, \"\\xA0\\xA0 Title:\", item.Title, \"  \\xA0\\xA0 Barcode:\", item.Barcode, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n          onClick: () => this.onReturnHandler(item.Title, item.Barcode),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Return\"));\n      } else {\n        alert(' book not issued');\n      }\n    }))));\n  }\n\n}\n\nexport default Return;","map":{"version":3,"sources":["C:\\Users\\User\\LibraryFront-master\\src\\Librarian\\Return.js"],"names":["React","Component","Input","axios","regExpLiteral","Return","constructor","props","onSubmitHandler","event","console","log","state","Rollno","get","params","rollno","then","res","setState","RollQuery","data","onReturnHandler","title","barcode","Barcode","Title","post","alert","window","location","reload","catch","error","render","e","target","value","map","item","index","Confirm","SN"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios';\n\nimport { regExpLiteral } from '@babel/types';\n\nclass Return extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            Rollno: \"\",\n            RollQuery : [],\n            Barcode:\"\",\n            Title:\"\",\n            Return:\"\"\n        };\n    }\nonSubmitHandler = (event) => {\n  {\n    console.log(this.state.Rollno);\n   axios.get('http://localhost:8081/gettingissuedata', {\n            params: {\n              rollno: this.state.Rollno\n            }}\n        )\n         .then(res => {\n            this.setState({RollQuery: res.data})\n            console.log(res.data);\n        })\n}\n}\nonReturnHandler=(title, barcode)=>{\nconsole.log(\"Title and barcode is\", title, barcode);\nvar data={\n    Barcode:barcode,\n    Rollno:this.state.Rollno,\n    Title:title\n}\n\n  axios.post('http://localhost:8081/returnbook',data)\n  .then(res => {\n\n          console.log(res.data);\n          if(res.data=='Book Returned'){\n              alert(title + 'Book returned');\n              window.location.reload();\n          }\n      })\n      .catch((error) => {\n          console.log(\"Error\");\n      });\n}\n\nrender() {\nreturn (\n\n    <div className=\"App\">\n        <h1 className=\"Header\">Return Book</h1>\n        \n        <div>\n            <Input\n                inputSize=\"inputSmall\"\n                type=\"text\"\n                placeholder='Rollno'\n                value={this.state.Rollno}\n                changed={e => this.setState({ Rollno: e.target.value })}\n            />\n             <button onClick={this.onSubmitHandler}>Submit</button>\n             <br/>\n             <br/>\n             <br/>\n        </div>\n        \n       <div>\n       <div>  \n         \n         {this.state.RollQuery.map((item,index)=>{\n             console.log(item);\n             if (item.Confirm){\n                return(\n                    <div>\n                    <div>SN:{item.SN} &nbsp;&nbsp;\n                    Roll:{item.Rollno}&nbsp;&nbsp;\n                    Title:{item.Title}  &nbsp;&nbsp;\n                    Barcode:{item.Barcode}\n                    &nbsp;&nbsp;\n                    </div>\n                    <button onClick={() => this.onReturnHandler(item.Title, item.Barcode)}>Return</button></div>\n                )\n            }\n            else{\n                alert(' book not issued');\n            }\n         })}\n        </div> \n       </div>\n    </div>\n\n)\n}\n}\nexport default Return;"]},"metadata":{},"sourceType":"module"}