{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\LibraryFront-master\\\\src\\\\Librarian\\\\Issue.js\";\nimport React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios'; //import BarcodeInputs from './DelBarcode';\n//import { CLIENT_RENEG_LIMIT } from 'tls';\n\nclass Issue extends Component {\n  constructor(props) {\n    super();\n\n    this.addBarcode = qty => {\n      this.setState({\n        barNos: qty\n      });\n    };\n\n    this.onSubmitHandler = event => {\n      var data = {\n        Rollno: this.state.Rollno,\n        Quantity: this.state.Quantity,\n        barcodes: this.state.barcodes\n      };\n      axios.post('http://localhost:8081/issuebooks', data).then(res => {\n        console.log(res.data);\n\n        if (res.data == 'Book issued') {\n          this.props.history.push('/issue-book');\n          window.location.reload();\n          alert('Book issued in rollno ' + this.state.Rollno); //   this.props.history.push('/issue-book');\n          // window.location.relaod();\n        } else {\n          this.props.history.push('/issue-book');\n          window.location.reload();\n          alert('More than 7 books are not available');\n        }\n      }).catch(error => {\n        console.log(\"Error\");\n      });\n    };\n\n    this.handleCodeChange = (codeValue, counter) => {\n      let codes = this.state.barcodes;\n      codes[counter] = codeValue;\n      this.setState({\n        barcodes: codes\n      });\n      console.log(\"Barcode lists are:\", this.state.barcodes);\n    };\n\n    this.state = {\n      barcodes: [],\n      Rollno: \"\",\n      Quantity: 0,\n      Barcode: \"\",\n      barNos: 0\n    };\n  }\n\n  render() {\n    let barcodeList = [],\n        codes = [];\n    const barNos = this.state.barNos;\n\n    for (let counter = 0; counter < barNos; counter++) {\n      barcodeList.push(React.createElement(\"div\", {\n        key: counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Barcode \".concat(counter + 1)), React.createElement(Input, {\n        type: \"number\",\n        name: counter,\n        \"data-id\": counter,\n        id: counter,\n        value: \"\",\n        inputSize: \"inputSmall\",\n        changed: e => this.handleCodeChange(e.target.value, counter),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"ISSUE BOOK\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputSize: \"inputSmall\",\n      type: \"text\",\n      placeholder: \"Rollno\",\n      value: this.state.Rollno,\n      changed: e => this.setState({\n        Rollno: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputSize: \"inputSmall\",\n      type: \"number\",\n      placeholder: \"Quantity\",\n      value: this.state.Quantity,\n      changed: e => this.setState({\n        Quantity: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addBarcode(this.state.Quantity),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Add Barcode\"), barcodeList, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"ISSUE\"));\n  }\n\n}\n\nexport default Issue;","map":{"version":3,"sources":["C:\\Users\\User\\LibraryFront-master\\src\\Librarian\\Issue.js"],"names":["React","Component","Input","axios","Issue","constructor","props","addBarcode","qty","setState","barNos","onSubmitHandler","event","data","Rollno","state","Quantity","barcodes","post","then","res","console","log","history","push","window","location","reload","alert","catch","error","handleCodeChange","codeValue","counter","codes","Barcode","render","barcodeList","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../components/input/input';\nimport '../App.css';\nimport axios from 'axios';\n//import BarcodeInputs from './DelBarcode';\n//import { CLIENT_RENEG_LIMIT } from 'tls';\n\nclass Issue extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            barcodes: [],\n            Rollno: \"\",\n            Quantity: 0,\n            Barcode: \"\",\n            barNos: 0,\n\n        };\n    }\n    addBarcode = (qty) => {\n        this.setState({\n            barNos: qty\n        });\n    }\n    onSubmitHandler = (event) => {\n        var data = {\n            Rollno: this.state.Rollno,\n            Quantity: this.state.Quantity,\n            barcodes: this.state.barcodes\n        }\n\n        axios.post('http://localhost:8081/issuebooks', data)\n            .then(res => {\n                console.log(res.data);\n                if(res.data=='Book issued'){\n                    this.props.history.push('/issue-book')\n                    window.location.reload();\n                    alert('Book issued in rollno ' + this.state.Rollno);\n                 //   this.props.history.push('/issue-book');\n                   // window.location.relaod();\n                   \n                }\n                   else {\n                    this.props.history.push('/issue-book');\n                    window.location.reload();\n                        alert('More than 7 books are not available');\n                     \n                    }\n                }\n            )\n            .catch((error) => {\n                console.log(\"Error\");\n            });\n    }\n\n    handleCodeChange = (codeValue, counter) => {\n        let codes = this.state.barcodes;\n        codes[counter] = codeValue;\n        this.setState({\n            barcodes: codes\n        })\n\n        console.log(\"Barcode lists are:\", this.state.barcodes);\n        \n    }\n\n    render() {\n        let barcodeList = [], codes = [];\n\n        const { barNos } = this.state;\n        for (let counter = 0; counter < barNos; counter++) {\n\n\n            barcodeList.push(\n\n\n                <div key={counter}>\n                    <label htmlFor={counter}>{`Barcode ${counter+1}`}</label>\n                    <Input\n                        type=\"number\"\n                        name={counter}\n                        data-id={counter}\n                        id={counter}\n                        value = ''\n                        inputSize=\"inputSmall\"\n                        changed = { (e) => this.handleCodeChange(e.target.value, counter)}\n                    />\n\n                </div>\n            );\n        }\n\n\n        return (\n              \n\n            <div className=\"App\" >\n                <h1 className=\"Header\">ISSUE BOOK</h1>\n                <div>\n                    <Input\n                        inputSize=\"inputSmall\"\n                        type=\"text\"\n                        placeholder='Rollno'\n                        value={this.state.Rollno}\n                        changed={e => this.setState({ Rollno: e.target.value })}\n                    />\n                </div>\n                <div>\n                    <Input\n                        inputSize=\"inputSmall\"\n                        type=\"number\"\n                        placeholder='Quantity'\n                        value={this.state.Quantity}\n                        changed={e => this.setState({ Quantity: e.target.value })}\n                    />\n                </div>\n                <br />\n\n                <button onClick={() => this.addBarcode(this.state.Quantity)}>Add Barcode</button>\n                {barcodeList}\n                <br />\n                < button onClick={this.onSubmitHandler} >ISSUE</button >\n            </div >\n\n        );\n    }\n}\n\nexport default Issue;"]},"metadata":{},"sourceType":"module"}